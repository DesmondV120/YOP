# **Ensemble Model and Hyperparameterization**

## **Assignment Title:**
Build an Ensemble Model and Hyperparameterization

## **Objective:**
Build a gradient boosting ensemble model using the **XGBoost** library that was installed during the activity. Then, perform a hyperparameterization technique on the model that you created.

---

## **Instructions:**

### **1. Dataset and Initial Setup**

- Use the **module8_assignment** dataset for this task.
- The dataset contains a number of columns that are **not needed** to build the model. For example:
  - Drop anything related to **address**, **year sold**, and **sale type**.

### **2. Ensemble Model**

#### **2.1 Data Exploration**

- **Perform any required data exploration** to understand the dataset:
  - Inspect the data to check for missing values, and data types, and gain general insight into the dataset.

#### **2.2 Data Visualizations**

- **Create data visualizations** for all categorical features.
- Review the **mean of numerical data** to better understand the distribution of variables.

#### **2.3 Feature Engineering**

- **Complete any feature engineering** that is necessary for the dataset:
  - Create or modify features as needed to improve model performance.

#### **2.4 Handle Categorical Variables and Missing Data**

- **Dummy code all categorical features** using one-hot encoding or any other appropriate method.
- **Deal with missing data**:
  - Some columns in the dataset may have a lot of missing values, so you may need to drop these columns or use imputation techniques to handle them.

#### **2.5 Build the Gradient Boosting Model**

- **Build the ensemble model using XGBoost library**:
  - Initialize and train an **XGBoost** gradient boosting model on the dataset.

- **Note**: XGBoost can be computationally intensive, so it may take some time to run, especially on a complex dataset. Consider reducing the dimensions of the data or using optimization techniques if the model is taking too long to train.

#### **2.6 Model Evaluation**

- **Evaluate the model's performance**:
  - Assess the model's **accuracy** and **precision**.
  - Interpret the outcome of the model.

---

### **3. Hyperparameterization**

#### **3.1 Hyperparameter Tuning - Estimators and Stopping Rounds**

- **Perform hyperparameter tuning** on your ensemble model:
  - Choose the **number of estimators** (also known as boosting rounds).
  - Choose the **early stopping rounds** to prevent overfitting.

- **Evaluation after this step**: Show the model's evaluation metrics after performing this tuning.

#### **3.2 Hyperparameter Tuning - Learning Rate**

- **Choose a learning rate** that optimizes the modelâ€™s performance.
- **Evaluate the model after adjusting the learning rate** to observe any improvements.

---

### **4. Notebook and Documentation**

- All work should be completed in a **Jupyter Notebook**.
- **Add comments in all cells** that you work in to explain what each step does.
- You will turn in the assignment by taking **screenshots** of your Jupyter Notebook and using the homework assignment template.
